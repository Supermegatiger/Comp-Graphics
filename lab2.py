from math import *

from OpenGL.GLUT import *
from OpenGL.GL import *

r = 0
WIDTH,HEIGHT = 900,600

house ={ 
    0: [(-0.33333333333333337, 0.79), (0.21333333333333337, 0.7933333333333333), (0.20666666666666678, -0.3866666666666667), (-0.3177777777777778, -0.3899999999999999), (-0.32666666666666666, 0.79), 's', (-0.27555555555555555, 0.7333333333333334), (-0.26888888888888884, 0.5666666666666667), (-0.13111111111111107, 0.5766666666666667), (-0.12888888888888894, 0.7166666666666667), (-0.2733333333333333, 0.7233333333333334), 's', (-0.01777777777777778, 0.7066666666666667), (-0.020000000000000018, 0.5766666666666667),(0.13777777777777778, 0.5733333333333333), (0.13555555555555565, 0.7166666666666667), (-0.011111111111111072, 0.71), 's', (-0.25555555555555554, 0.4033333333333333), (-0.2533333333333333, 0.2433333333333333), (-0.12444444444444447, 0.2533333333333333), (-0.12444444444444447, 0.3966666666666666), (-0.2533333333333333, 0.3933333333333333), 's', (-0.01777777777777778, 0.3933333333333333), (-0.015555555555555545, 0.2666666666666667), (0.11333333333333329, 0.27), (0.11555555555555563, 0.3933333333333333), (-0.01777777777777778, 0.39), 's', (-0.16000000000000003, -0.09666666666666668), (-0.020000000000000018, -0.09666666666666668), (-0.01777777777777778, -0.3733333333333333), 's', (-0.1577777777777778, -0.09666666666666668), (-0.15333333333333332, -0.3833333333333333), 's', (-0.0888888888888889, -0.09666666666666668), (-0.0888888888888889, -0.3899999999999999), 's', (-0.3288888888888889, 0.79), (-0.35111111111111115, 0.79), (-0.3533333333333334, 0.8466666666666667), (0.23555555555555552, 0.85), (0.2333333333333334, 0.7933333333333333), (0.21111111111111103, 0.79), 's', (-0.3533333333333334, 0.8033333333333333), (-0.35111111111111115, 0.79), (-0.33777777777777773, 0.7833333333333333), (0.22666666666666657, 0.78), (0.2333333333333334, 0.7966666666666666),  's'],
    
    1: [(-0.34444444444444444, 0.5933333333333333), (-0.3422222222222222, -0.40666666666666673), (-0.04222222222222227, -0.4833333333333334), (0.28222222222222215, -0.3466666666666667), (0.2911111111111111, 0.6066666666666667), 's', (-0.04888888888888887, -0.4866666666666666), (-0.046666666666666634, 0.88), (-0.3466666666666667, 0.5900000000000001), 's', (-0.04888888888888887, 0.8833333333333333), (0.288888888888889, 0.6066666666666667), 's', (-0.34444444444444444, 0.6), (-0.36, 0.6), (-0.05111111111111111, 0.9066666666666666), (0.30000000000000004, 0.62), (0.2866666666666666, 0.6066666666666667), 's', (0.2977777777777777, 0.6233333333333333), (0.29555555555555557, 0.6733333333333333), (-0.05111111111111111, 0.97), (-0.05111111111111111, 0.91), (-0.04888888888888887, 0.87), 's', (-0.053333333333333344, 0.9633333333333334), (-0.3555555555555555, 0.65), (-0.35777777777777775, 0.5966666666666667), 's', (-0.3177777777777778, 0.5266666666666666), (-0.23111111111111116, 0.6166666666666667), (-0.22888888888888892, 0.4633333333333334), (-0.30666666666666664, 0.3966666666666666), (-0.3111111111111111, 0.52), 's', (-0.1777777777777778, 0.6366666666666667), (-0.1777777777777778, 0.4966666666666667), (-0.08444444444444443, 0.5700000000000001), (-0.0822222222222222, 0.72), (-0.18222222222222217, 0.63), 's', (-0.2977777777777778, 0.26), (-0.22666666666666668, 0.29666666666666663), (-0.23111111111111116, 0.1466666666666666), (-0.30000000000000004, 0.13), (-0.30222222222222217, 0.2566666666666667), 's', (-0.16222222222222227, 0.31666666666666665), (-0.16222222222222227, 0.16666666666666663), (-0.09111111111111114, 0.18000000000000005), (-0.09111111111111114, 0.35), (-0.16222222222222227, 0.31333333333333335), 's', (-0.2644444444444445, -0.1100000000000001), (-0.15111111111111108, -0.09666666666666668), (-0.16000000000000003, -0.44333333333333336), 's', (-0.2644444444444445, -0.1166666666666667), (-0.2711111111111111, -0.41666666666666674), 's', (-0.2155555555555555, -0.1166666666666667), (-0.21333333333333337, -0.42999999999999994), 's', (0.026666666666666616, -0.0), (0.2155555555555555, -0.030000000000000027), (0.2155555555555555, -0.24), (0.03111111111111109, -0.29666666666666663), (0.03333333333333344, -0.016666666666666607), 's', (0.008888888888888946, 0.35), (0.09777777777777774, 0.31666666666666665), (0.09333333333333327, 0.17666666666666664), (0.006666666666666599, 0.19666666666666666), (0.011111111111111072, 0.33999999999999997), 's', (0.16666666666666674, 0.29666666666666663), (0.16666666666666674, 0.16666666666666663), (0.23777777777777787, 0.14), (0.2333333333333334, 0.2633333333333333), (0.1644444444444444, 0.2866666666666666), 's', (-0.0022222222222222365, 0.7266666666666667), (0.0, 0.5966666666666667), (0.0822222222222222, 0.5466666666666666), (0.08444444444444454, 0.6599999999999999), (0.0022222222222221255, 0.7266666666666667), 's', (0.1577777777777778, 0.6066666666666667), (0.1577777777777778, 0.5033333333333334), (0.2333333333333334, 0.45999999999999996), (0.23777777777777787, 0.56), (0.1577777777777778, 0.6133333333333333)],

    2:[(-0.3555555555555555, 0.81), (0.308888888888889, 0.8066666666666666), (0.30666666666666664, -0.3866666666666667), (-0.3466666666666667, -0.3833333333333333), (-0.3533333333333334, 0.8133333333333334), 's', (-0.2733333333333333, 0.7233333333333334), (-0.09999999999999998, 0.72), (-0.09777777777777774, 0.56), (-0.26, 0.5566666666666666), (-0.2666666666666667, 0.7166666666666667), 's', (0.05555555555555558, 0.7133333333333334), (0.05333333333333323, 0.5466666666666666), (0.20666666666666678, 0.5566666666666666), (0.20666666666666678, 0.7133333333333334), (0.05333333333333323, 0.7133333333333334), 's', (-0.2577777777777778, 0.4), (-0.09999999999999998, 0.3966666666666666), (-0.09999999999999998, 0.21999999999999997), (-0.2533333333333333, 0.21999999999999997), (-0.25555555555555554, 0.3966666666666666), 's', (0.057777777777777706, 0.21666666666666667), (0.057777777777777706, 0.4), (0.20666666666666678, 0.3866666666666667), (0.2022222222222223, 0.21666666666666667), (0.05555555555555558, 0.21333333333333337), 's', (-0.2466666666666667, 0.07333333333333336), (0.19999999999999996, 0.06333333333333335), (0.19999999999999996, -0.22999999999999998), (-0.2466666666666667, -0.21666666666666656), (-0.2466666666666667, 0.05666666666666664), (-0.24888888888888894, 0.07333333333333336), 's', (-0.3555555555555555, 0.81), (-0.3666666666666667, 0.83), (-0.3733333333333333, 0.8933333333333333), (0.33777777777777773, 0.8866666666666667), (0.33333333333333326, 0.8366666666666667), (0.30666666666666664, 0.81), 's', (-0.36444444444444446, 0.83), (0.3288888888888888, 0.8333333333333334), (0.3222222222222222, 0.8166666666666667), 's', (-0.36, 0.8166666666666667), (0.31333333333333324, 0.8200000000000001)],
    
    3:[(0.34444444444444444, 0.5933333333333333), (0.3422222222222222, -0.40666666666666673), (0.04222222222222227, -0.4833333333333334), (-0.28222222222222215, -0.3466666666666667), (-0.2911111111111111, 0.6066666666666667), 's', (0.04888888888888887, -0.4866666666666666), (0.046666666666666634, 0.88), (0.3466666666666667, 0.5900000000000001), 's', (0.04888888888888887, 0.8833333333333333), (-0.288888888888889, 0.6066666666666667), 's', (0.34444444444444444, 0.6), (0.36, 0.6), (0.05111111111111111, 0.9066666666666666), (-0.30000000000000004, 0.62), (-0.2866666666666666, 0.6066666666666667), 's', (-0.2977777777777777, 0.6233333333333333), (-0.29555555555555557, 0.6733333333333333), (0.05111111111111111, 0.97), (0.05111111111111111, 0.91), (0.04888888888888887, 0.87), 's', (0.053333333333333344, 0.9633333333333334), (0.3555555555555555, 0.65), (0.35777777777777775, 0.5966666666666667), 's', (0.3177777777777778, 0.5266666666666666), (0.23111111111111116, 0.6166666666666667), (0.22888888888888892, 0.4633333333333334), (0.30666666666666664, 0.3966666666666666), (0.3111111111111111, 0.52), 's', (0.1777777777777778, 0.6366666666666667), (0.1777777777777778, 0.4966666666666667), (0.08444444444444443, 0.5700000000000001), (0.0822222222222222, 0.72), (0.18222222222222217, 0.63), 's', (0.2977777777777778, 0.26), (0.22666666666666668, 0.29666666666666663), (0.23111111111111116, 0.1466666666666666), (0.30000000000000004, 0.13), (0.30222222222222217, 0.2566666666666667), 's', (0.16222222222222227, 0.31666666666666665), (0.16222222222222227, 0.16666666666666663), (0.09111111111111114, 0.18000000000000005), (0.09111111111111114, 0.35), (0.16222222222222227, 0.31333333333333335), 's', (-0.026666666666666616, -0.0), (-0.2155555555555555, -0.030000000000000027), (-0.2155555555555555, -0.24), (-0.03111111111111109, -0.29666666666666663), (-0.03333333333333344, -0.016666666666666607), 's', (-0.008888888888888946, 0.35), (-0.09777777777777774, 0.31666666666666665), (-0.09333333333333327, 0.17666666666666664), (-0.006666666666666599, 0.19666666666666666), (-0.011111111111111072, 0.33999999999999997), 's', (-0.16666666666666674, 0.29666666666666663), (-0.16666666666666674, 0.16666666666666663), (-0.23777777777777787, 0.14), (-0.2333333333333334, 0.2633333333333333), (-0.1644444444444444, 0.2866666666666666), 's', (0.0022222222222222365, 0.7266666666666667), (-0.0, 0.5966666666666667), (-0.0822222222222222, 0.5466666666666666), (-0.08444444444444454, 0.6599999999999999), (-0.0022222222222221255, 0.7266666666666667), 's', (-0.1577777777777778, 0.6066666666666667), (-0.1577777777777778, 0.5033333333333334), (-0.2333333333333334, 0.45999999999999996), (-0.23777777777777787, 0.56), (-0.1577777777777778, 0.6133333333333333)],

    4: [(-0.33333333333333337, 0.79), (0.21333333333333337, 0.7933333333333333), (0.20666666666666678, -0.3866666666666667), (-0.3177777777777778, -0.3899999999999999), (-0.32666666666666666, 0.79), 's', (-0.27555555555555555, 0.7333333333333334), (-0.26888888888888884, 0.5666666666666667), (-0.13111111111111107, 0.5766666666666667), (-0.12888888888888894, 0.7166666666666667), (-0.2733333333333333, 0.7233333333333334), 's', (-0.01777777777777778, 0.7066666666666667), (-0.020000000000000018, 0.5766666666666667),(0.13777777777777778, 0.5733333333333333), (0.13555555555555565, 0.7166666666666667), (-0.011111111111111072, 0.71), 's', (-0.25555555555555554, 0.4033333333333333), (-0.2533333333333333, 0.2433333333333333), (-0.12444444444444447, 0.2533333333333333), (-0.12444444444444447, 0.3966666666666666), (-0.2533333333333333, 0.3933333333333333), 's', (-0.01777777777777778, 0.3933333333333333), (-0.015555555555555545, 0.2666666666666667), (0.11333333333333329, 0.27), (0.11555555555555563, 0.3933333333333333), (-0.01777777777777778, 0.39), 's', (-0.3288888888888889, 0.79), (-0.35111111111111115, 0.79), (-0.3533333333333334, 0.8466666666666667), (0.23555555555555552, 0.85), (0.2333333333333334, 0.7933333333333333), (0.21111111111111103, 0.79), 's', (-0.3533333333333334, 0.8033333333333333), (-0.35111111111111115, 0.79), (-0.33777777777777773, 0.7833333333333333), (0.22666666666666657, 0.78), (0.2333333333333334, 0.7966666666666666),  's'],

}
temp = []
for i in house[3]:
    if i!='s':
        temp.append((-i[0],i[1]))
    else:
        temp.append('s')
house[5] = temp

temp = []
for i in house[2]:
    if i!='s':
        temp.append((-i[0],i[1]))
    else:
        temp.append('s')
house[6] = temp

temp = []
for i in house[1]:
    if i!='s':
        temp.append((-i[0],i[1]))
    else:
        temp.append('s')
house[7] = temp
# temp = []
# for i in house[0]:
#     if i!='s':
#         temp.append((-i[0],i[1]))
#     else:
#         temp.append('s')
# house.append(temp)

def skeyboard(k,x,y):
    global r
    if k==GLUT_KEY_LEFT:
        if not r:
            r=8
        r -= 1
    elif k==GLUT_KEY_RIGHT:
        r+=1
    if abs(r)==8:
        r=0
    # print(r)

def paint():

    glColor3f(0,1,0)
    glBegin(GL_LINE_STRIP)
    for i in house[r]:
        if i == 's':
            glEnd()
            glBegin(GL_LINE_STRIP)
        else:
            glVertex2f(i[0],i[1])
    glEnd()
    


def draw():
    glClear(GL_COLOR_BUFFER_BIT)

    # glLoadIdentity()
    # glRotatef(-20,1,0,0)
    # glRotatef(45,0,1,0)
    
    # smth(0.4)
    paint()

    
    glFlush()

def resize(w,h):
    global WIDTH,HEIGHT
    WIDTH = w
    HEIGHT = h
    glViewport(0,0,w,h)
    # glMatrixMode(GL_PROJECTION)
    # glLoadIdentity()
    # glMatrixMode(GL_MODELVIEW)
    # glLoadIdentity()


glutInit(sys.argv)
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)

glutInitWindowSize(WIDTH, HEIGHT)
glutInitWindowPosition(100, 100)
glutCreateWindow(b"My OpenGL Program")
glutDisplayFunc(draw)
glutReshapeFunc(resize)
glutIdleFunc(draw)

glutSpecialFunc(skeyboard)
# glutKeyboardFunc(keyboard)
# glutMouseFunc(mouse)

glutMainLoop()